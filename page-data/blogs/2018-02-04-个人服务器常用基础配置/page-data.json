{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/blogs/2018-02-04-个人服务器常用基础配置/",
    "result": {"data":{"site":{"siteMetadata":{"title":"张小伦的网络日志","description":"欢迎来到张小伦的网络日志 \n\t\t一个记录生活，分享心得的博客","menu":[{"id":"home","name":"首页","url":"/"},{"id":"category","name":"分类","url":"/categories"},{"id":"archive","name":"归档","url":"/archives"},{"id":"about","name":"关于我","url":"/about"}]}},"markdownRemark":{"id":"15d14051-3939-58fd-b02a-32593af14b60","html":"<p>买了一个服务器，系统是CentOS7.2 .做了一番基础设置，在此记录一下。</p>\n<!--more-->\n<h2>更新 yum 源仓库</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">yum update</code></pre></div>\n<h2>安装 Git</h2>\n<p>yum 源仓库里最新版本的 Git 是 1.8.3.1，但是官方最新版本已经到了 2.9.2。想要安装最新版本的的 Git，只有下载源码进行安装。</p>\n<p>可以通过info命令查看源仓库中git的信息</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ yum info <span class=\"token function\">git</span></code></pre></div>\n<p>在开始编译安装git之前，需要安装一些依赖</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ yum <span class=\"token function\">install</span> curl-devel expat-devel gettext-devel openssl-devel zlib-devel\n$ yum <span class=\"token function\">install</span> gcc perl-ExtUtils-MakeMaker</code></pre></div>\n<p>下载源码压缩包，解压之后编译和安装</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">wget</span> https://www.kernel.org/pub/software/scm/git/git-2.9.5.tar.gz -O git.tar.gz\n$ <span class=\"token function\">tar</span> -zxf git.tar.gz\n$ <span class=\"token builtin class-name\">cd</span> git.tar.gz\n$ <span class=\"token function\">make</span> <span class=\"token assign-left variable\">prefix</span><span class=\"token operator\">=</span>/usr/local all\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">make</span> <span class=\"token assign-left variable\">prefix</span><span class=\"token operator\">=</span>/usr/local <span class=\"token function\">install</span></code></pre></div>\n<blockquote>\n<p>可以在<a href=\"https://www.kernel.org/pub/software/scm/git/\">这里</a>找到所有的版本。</p>\n</blockquote>\n<h2>安装 fish-shell</h2>\n<p>CentOS 6和CentOS 7使用的源不同，需要注意一下：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">// CentOS <span class=\"token number\">7</span>\n$ <span class=\"token builtin class-name\">cd</span> /etc/yum.repos.d/\n$ <span class=\"token function\">wget</span> https://download.opensuse.org/repositories/shells:fish:release:2/CentOS_7/shells:fish:release:2.repo\n$ yum <span class=\"token function\">install</span> fish\n\n// CentOS <span class=\"token number\">6</span>\n$ <span class=\"token builtin class-name\">cd</span> /etc/yum.repos.d/\n$ <span class=\"token function\">wget</span> https://download.opensuse.org/repositories/shells:fish:release:2/CentOS_6/shells:fish:release:2.repo\n$ yum <span class=\"token function\">install</span> fish</code></pre></div>\n<p>安装<a href=\"https://github.com/oh-my-fish/oh-my-fish\">oh-my-fish</a></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> -L https://get.oh-my.fish <span class=\"token operator\">|</span> fish</code></pre></div>\n<p>安装oh-my-fish的主题<a href=\"https://github.com/oh-my-fish/theme-clearance\">clearance</a></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ omf <span class=\"token function\">install</span> clearance</code></pre></div>\n<h2>安装Node.js</h2>\n<p>安装Node.js方式有多种：</p>\n<ol>\n<li>更新yum源，使用yum安装</li>\n<li>下载源代码编译安装</li>\n<li>使用<a href=\"https://github.com/creationix/nvm\">nvm</a>安装</li>\n</ol>\n<p>我选择使用nvm安装和管理服务器上的Node。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh <span class=\"token operator\">|</span> <span class=\"token function\">bash</span></code></pre></div>\n<p>nvm在fish-shell下无法使用，需要做一些其他的工作。可以通过<a href=\"https://github.com/edc/bass\">bass</a>让 fish-shell 可以使用 bash 环境下的工具。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">// 先安装fisherman\n<span class=\"token function\">curl</span> -Lo ~/.config/fish/functions/fisher.fish --create-dirs https://git.io/fisher\n\n// 安装 bass\nfisher edc/bass</code></pre></div>\n<p>编辑fish的配置文件<code class=\"language-text\">~/.config/fish/config.fish</code>(如果文件不存在就创建一个)，增加一段 bass 命令的封装代码</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">function</span> nvm\n  bass <span class=\"token builtin class-name\">source</span> ~/.nvm/nvm.sh <span class=\"token string\">';'</span> nvm <span class=\"token variable\">$argv</span>\nend</code></pre></div>\n<p>现在就可以在fish-shell中使用nvm了。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">// 安装 nodev8.10.0\nnvm <span class=\"token function\">install</span> <span class=\"token number\">8.10</span>.0\n\n// 设置 <span class=\"token function\">npm</span> 的 Taobao 源\n<span class=\"token function\">npm</span> config <span class=\"token builtin class-name\">set</span> registry https://registry.npm.taobao.org --global\n<span class=\"token function\">npm</span> config <span class=\"token builtin class-name\">set</span> disturl https://npm.taobao.org/dist --global\n</code></pre></div>\n<h2>安装 Python3</h2>\n<p>CentOS 7系统自带 Python2.7.5。我需要在安装最新的Python v3.x版本。\n在安装之前，有几个依赖工具需要提前装好。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ yum <span class=\"token function\">install</span> gcc zlib-devel</code></pre></div>\n<p>之前安装git时已经安装过。所以接下来时下载源码、编译安装。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">wget</span> https://www.python.org/ftp/python/3.6.0/Python-3.6.0.tar.xz -O python3.6.tar.xz\n$ <span class=\"token function\">tar</span> xJf python3.6.tar.xz\n$ <span class=\"token builtin class-name\">cd</span> python3.6.tar.xz\n$ ./configure\n\n// 因为我使用的是 fish-shell。其实就是 <span class=\"token function\">bash</span> 中的 <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">make</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">make</span> <span class=\"token function\">install</span><span class=\"token variable\">`</span></span>\n$ <span class=\"token function\">make</span><span class=\"token punctuation\">;</span> and  <span class=\"token function\">make</span> <span class=\"token function\">install</span>\n\n// 检查安装结果。输出 <span class=\"token variable\"><span class=\"token variable\">`</span>/usr/local/bin/python3<span class=\"token variable\">`</span></span>\n$ <span class=\"token function\">which</span> python3</code></pre></div>\n<h2>安装 MySQL</h2>\n<blockquote>\n<p>MySQL 被 Oracle 收购后，有将MySQL闭源的潜在风险，因此社区采用分支的方式来避开这个风险。</p>\n</blockquote>\n<blockquote>\n<p>MariaDB的目的是完全兼容MySQL，包括API和命令行，使之能轻松成为MySQL的代替品。</p>\n</blockquote>\n<blockquote>\n<p>更多详情可访问<a href=\"https://www.wikiwand.com/zh/MariaDB\">Wiki-MariaDB</a>。</p>\n</blockquote>\n<p>MySQL 被 Oracle 收购后，CentOS 的镜像仓库中提供的默认的数据库也变为了 MariaDB。所以从官网安装。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">wget</span> http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm\n$ <span class=\"token function\">rpm</span> -ivh mysql-community-release-el7-5.noarch.rpm\n$ yum <span class=\"token function\">install</span> mysql-community-server\n\n// 安装成功后重启mysql服务。\n$ <span class=\"token function\">service</span> mysql restart</code></pre></div>\n<h3>设置编码</h3>\n<p>在 /etc/my.cnf 中设置默认的编码</p>\n<div class=\"gatsby-highlight\" data-language=\"vim\"><pre class=\"language-vim\"><code class=\"language-vim\"><span class=\"token punctuation\">[</span>client<span class=\"token punctuation\">]</span>\ndefault<span class=\"token operator\">-</span>character<span class=\"token operator\">-</span><span class=\"token keyword\">set</span> <span class=\"token operator\">=</span> utf8\n\n<span class=\"token punctuation\">[</span>mysqld<span class=\"token punctuation\">]</span>\ndefault<span class=\"token operator\">-</span>storage<span class=\"token operator\">-</span>engine <span class=\"token operator\">=</span> INNODB\ncharacter<span class=\"token operator\">-</span><span class=\"token keyword\">set</span><span class=\"token operator\">-</span>server <span class=\"token operator\">=</span> utf8\ncollation<span class=\"token operator\">-</span>server <span class=\"token operator\">=</span> utf8_general_ci #不区分大小写\ncollation<span class=\"token operator\">-</span>server <span class=\"token operator\">=</span>  utf8_bin #区分大小写\ncollation<span class=\"token operator\">-</span>server <span class=\"token operator\">=</span> utf8_unicode_ci #比 utf8_general_ci 更准确</code></pre></div>\n<h2>安装 Nginx</h2>\n<p>yum 在线安装会将 nginx 的安装文件放在系统的不同位置，可以通过命令 rpm -ql nginx 来查看安装路径</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> $ <span class=\"token function\">rpm</span> -ql nginx\n/etc/logrotate.d/nginx\n/etc/nginx\n/etc/nginx/conf.d\n/etc/nginx/conf.d/default.conf\n/etc/nginx/conf.d/ssl.conf\n/etc/nginx/conf.d/virtual.conf\n/etc/nginx/fastcgi.conf\n/etc/nginx/fastcgi.conf.default\n/etc/nginx/fastcgi_params\n/etc/nginx/fastcgi_params.default\n/etc/nginx/koi-utf\n/etc/nginx/koi-win\n/etc/nginx/mime.types\n/etc/nginx/mime.types.default\n/etc/nginx/nginx.conf\n/etc/nginx/nginx.conf.default\n/etc/nginx/scgi_params\n/etc/nginx/scgi_params.default\n/etc/nginx/uwsgi_params\n/etc/nginx/uwsgi_params.default\n/etc/nginx/win-utf\n/etc/rc.d/init.d/nginx\n/etc/sysconfig/nginx\n/usr/lib/perl5/vendor_perl/auto/nginx\n/usr/lib/perl5/vendor_perl/auto/nginx/nginx.so\n/usr/lib/perl5/vendor_perl/nginx.pm\n/usr/sbin/nginx\n/usr/share/doc/nginx-1.0.15\n/usr/share/doc/nginx-1.0.15/CHANGES\n/usr/share/doc/nginx-1.0.15/LICENSE\n/usr/share/doc/nginx-1.0.15/README\n/usr/share/man/man3/nginx.3pm.gz\n/usr/share/man/man8/nginx.8.gz\n/usr/share/nginx/html/404.html\n/usr/share/nginx/html/50x.html\n/usr/share/nginx/html/index.html\n/usr/share/nginx/html/nginx-logo.png\n/usr/share/nginx/html/poweredby.png\n/usr/share/vim/vimfiles/ftdetect/nginx.vim\n/usr/share/vim/vimfiles/indent/nginx.vim\n/usr/share/vim/vimfiles/syntax/nginx.vim\n/var/lib/nginx\n/var/lib/nginx/tmp\n/var/log/nginx</code></pre></div>\n<p>源码包 安装他的所有文件（包括配置文件，库文件，资源文件等）都在同一个目录下，我们想卸载的时候，直接将这个文件删除就可以，不会有任何垃圾文件存在。</p>\n<p>我采用源码编译的方式安装</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ yum -y <span class=\"token function\">install</span> gcc gcc-c++ <span class=\"token function\">make</span> libtool zlib zlib-devel openssl openssl-devel pcre pcre-devel\n$ <span class=\"token function\">wget</span> http://nginx.org/download/nginx-1.12.2.tar.gz\n$ <span class=\"token function\">tar</span> -zxvf nginx-1.12.2.tar.gz\n\n// 默认安装到 /usr/local/nginx，可以通过--prefix指定安装目录。我这边显式声明一次。\n$ ./configure --prefix<span class=\"token operator\">=</span>/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module\n$ <span class=\"token function\">make</span><span class=\"token punctuation\">;</span> and <span class=\"token function\">make</span> <span class=\"token function\">install</span></code></pre></div>\n<p>nginx 几个常用的命令</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">/usr/local/nginx/sbin/nginx <span class=\"token comment\"># 启动</span>\n/usr/local/nginx/sbin/nginx -s stop <span class=\"token comment\"># 停止</span></code></pre></div>","frontmatter":{"title":"个人服务器常用基础配置","date":"March 09, 2018","description":null,"categories":["全栈"],"tags":["Linux","配置"]}},"previous":{"fields":{"slug":"/blogs/2018-07-08-TypeScript学习笔记-入门:安装与基础知识/"},"frontmatter":{"title":"TypeScript学习笔记-入门:安装与基础知识"}},"next":{"fields":{"slug":"/blogs/2017-02-16-最近几次面试的小小总结/"},"frontmatter":{"title":"最近几次面试的小总结","draft":null,"tags":["随笔"],"categories":["随笔"],"status":"publish"}}},"pageContext":{"id":"15d14051-3939-58fd-b02a-32593af14b60","previousPostId":"c3a661e5-2ead-53b9-8b15-75ff79894a62","nextPostId":"1f7356a5-7dfb-5eab-9da5-49258d60dbc3"}},
    "staticQueryHashes": ["2841359383"]}