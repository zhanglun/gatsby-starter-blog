{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/blogs/git使用笔记(二)-撤销操作/",
    "result": {"data":{"site":{"siteMetadata":{"title":"张小伦的网络日志","description":"欢迎来到张小伦的网络日志 \n\t\t一个记录生活，分享心得的博客","menu":[{"id":"home","name":"首页","url":"/"},{"id":"category","name":"分类","url":"/categories"},{"id":"archive","name":"归档","url":"/archives"},{"id":"about","name":"关于我","url":"/about"}]}},"markdownRemark":{"id":"70304930-0fb9-5b3c-a611-402bfcfc6020","html":"<p>在最近使用 git 的过程中，有时候遇到这样的一个问题：习惯性的 “add -A”，这会将所有的修改都添加到暂存区，可是有两个文件的修改暂时不想添加的呀，这该怎么办？git 提供了一些撤销操作的方法。比如：</p>\n<h3>取消已经暂存的修改</h3>\n<p>就像前面说的，习惯性的 “add -A” 将暂时不想添加的修改添加到了暂存区。而取消已经暂存的修改的方法，git 已经在你每次使用 <code class=\"language-text\">git status</code> 查看文件状态的时候给出了解决方案，</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">➜  hexo-theme git:<span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ <span class=\"token function\">git</span> status\r\nOn branch master\r\nYour branch is ahead of <span class=\"token string\">'origin/master'</span> by <span class=\"token number\">2</span> commits.\r\n  <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git push\"</span> to publish your <span class=\"token builtin class-name\">local</span> commits<span class=\"token punctuation\">)</span>\r\n\r\nChanges to be committed:\r\n  <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git reset HEAD &lt;file>...\"</span> to unstage<span class=\"token punctuation\">)</span>\r\n\r\n    modified:   processing/README.md\r\n    modified:   processing/layout/_partial/navigation.jade\r\n    modified:   processing/layout/_widget/archive.jade\r\n    modified:   processing/layout/_widget/categories.jade\r\n    modified:   processing/source/css/_base/base.scss\r\n    modified:   processing/source/css/_base/variables.scss\r\n    modified:   processing/source/css/_partial/navigation.scss\r\n    modified:   processing/source/css/style.scss</code></pre></div>\n<p>可以使用 git reset HEAD <file>… 的方式取消暂存。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">➜  hexo-theme git:<span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ <span class=\"token function\">git</span> reset HEAD *\r\nUnstaged changes after reset:\r\nM\tprocessing/README.md\r\nM\tprocessing/layout/_partial/navigation.jade\r\nM\tprocessing/layout/_widget/archive.jade\r\nM\tprocessing/layout/_widget/categories.jade\r\nM\tprocessing/source/css/_base/base.scss\r\nM\tprocessing/source/css/_base/variables.scss\r\nM\tprocessing/source/css/_partial/navigation.scss\r\nM\tprocessing/source/css/style.scss</code></pre></div>\n<p>这时再使用 <code class=\"language-text\">git status</code> 查看文件状态可以看到</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">➜  hexo-theme git:<span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ <span class=\"token function\">git</span> status\r\nOn branch master\r\nYour branch is ahead of <span class=\"token string\">'origin/master'</span> by <span class=\"token number\">2</span> commits.\r\n  <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git push\"</span> to publish your <span class=\"token builtin class-name\">local</span> commits<span class=\"token punctuation\">)</span>\r\n\r\nChanges not staged <span class=\"token keyword\">for</span> commit:\r\n  <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git add &lt;file>...\"</span> to update what will be committed<span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git checkout -- &lt;file>...\"</span> to discard changes <span class=\"token keyword\">in</span> working directory<span class=\"token punctuation\">)</span>\r\n\r\n  modified:   processing/README.md\r\n  modified:   processing/layout/_partial/navigation.jade\r\n  modified:   processing/layout/_widget/archive.jade\r\n  modified:   processing/layout/_widget/categories.jade\r\n  modified:   processing/source/css/_base/base.scss\r\n  modified:   processing/source/css/_base/variables.scss\r\n  modified:   processing/source/css/_partial/navigation.scss\r\n  modified:   processing/source/css/style.scss\r\n\r\nno changes added to commit <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git add\"</span> and/or <span class=\"token string\">\"git commit -a\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>可以看到，现在所有的修改都没有被暂存。</p>\n<h3>取消对文件的修改</h3>\n<p>有一次，我正修复一个bug，修改本地仓库的一个文件，还没有完成时，同伴告诉我他已经修改好了，并且已经提交到远程了。我停下手头的工作，准备 pull ，这时候意识到，如果直接 pull，merge 的时候必然会冲突，因为我和同事同时修改了同一个文件的差不多相同的地方。但是我自己修改了文件很多地方，一味的 CTRL+Z 也难以解决问题，此时我需要将我修改的文件返回到修改之前的状态。很凑巧的是，在执行 <code class=\"language-text\">git status</code> 时，同样也给出了具体的撤销方法。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">➜  hexo-theme git:<span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> <span class=\"token function\">git</span> status\r\nOn branch master\r\nYour branch is up-to-date with <span class=\"token string\">'origin/master'</span><span class=\"token builtin class-name\">.</span>\r\n\r\nChanges not staged <span class=\"token keyword\">for</span> commit:\r\n  <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git add &lt;file>...\"</span> to update what will be committed<span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git checkout -- &lt;file>...\"</span> to discard changes <span class=\"token keyword\">in</span> working directory<span class=\"token punctuation\">)</span>\r\n\r\n  modified:   processing/layout/_widget/archive.jade\r\n  modified:   processing/layout/_widget/categories.jade\r\n  modified:   processing/layout/_widget/tags.jade\r\n  modified:   processing/layout/layout.jade\r\n  modified:   processing/source/css/_base/base.scss\r\n\r\nno changes added to commit <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git add\"</span> and/or <span class=\"token string\">\"git commit -a\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>使用 <code class=\"language-text\">git checkout -- &lt;filename></code> 来取消工作目录中的修改。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">➜  hexo-theme git:<span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ <span class=\"token function\">git</span> checkout -- *\r\n➜  hexo-theme git:<span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> <span class=\"token function\">git</span> status\r\nOn branch master\r\nYour branch is up-to-date with <span class=\"token string\">'origin/master'</span><span class=\"token builtin class-name\">.</span>\r\n\r\nnothing to commit, working directory clean</code></pre></div>\n<p>效果显而易见！！这条命令有些危险，所有对文件的修改都没有了。如果一个不小心将自己需要的修改 discard 了，那就只有哭了……</p>\n<h3>修改最后一次的提交</h3>\n<p>有时候在提交时，发现自己漏掉或者多选了几个文件，亦或者提交信息写错了，想要撤销刚才的提交操作，可以使用 <code class=\"language-text\">--amend</code> 这个选项，重新提交</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">➜  hexo-theme git:<span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ <span class=\"token function\">git</span> <span class=\"token function\">add</span> -A\r\n➜  hexo-theme git:<span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ <span class=\"token function\">git</span> commit -m <span class=\"token string\">\"commit wrong\"</span>\r\n<span class=\"token punctuation\">[</span>master ebcbab2<span class=\"token punctuation\">]</span> commit wrong\r\n  <span class=\"token number\">4</span> files changed, <span class=\"token number\">78</span> insertions<span class=\"token punctuation\">(</span>+<span class=\"token punctuation\">)</span>, <span class=\"token number\">106</span> deletions<span class=\"token punctuation\">(</span>-<span class=\"token punctuation\">)</span>\r\n  rewrite processing/source/css/_base/base.scss <span class=\"token punctuation\">(</span><span class=\"token number\">64</span>%<span class=\"token punctuation\">)</span></code></pre></div>\n<p>发现自己提交了一个 “commit wrong” 的错误提交信息，也不用太紧张，输入指令</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> commit --amend</code></pre></div>\n<p>之后，会跳转到命令行中的 vim 中，提示你修改提交信息。只要没有推送到远程端，一切都好说～</p>","frontmatter":{"title":"git 使用笔记(二)-撤销操作","date":"July 22, 2014","description":null,"categories":[],"tags":["Git","笔记"]}},"previous":{"fields":{"slug":"/blogs/grunt的简单配置和使用/"},"frontmatter":{"title":"Grunt的简单配置和使用"}},"next":{"fields":{"slug":"/blogs/踩坑日记-ie下a标签的虚线框/"},"frontmatter":{"title":"踩坑日记-IE下 A 标签的虚线框和必须要会用的 CSS 选择器","draft":null,"tags":["CSS","笔记","兼容性","填坑日记"],"categories":[],"status":"publish"}}},"pageContext":{"id":"70304930-0fb9-5b3c-a611-402bfcfc6020","previousPostId":"5375af86-8d73-5da6-adf8-9a5b5e2ae7f9","nextPostId":"ee9cfb6e-68b6-5d21-96ad-70a884f41437"}},
    "staticQueryHashes": ["2841359383"]}