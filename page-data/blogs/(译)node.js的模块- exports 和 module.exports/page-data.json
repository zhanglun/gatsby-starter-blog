{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/blogs/(译)node.js的模块- exports 和 module.exports/",
    "result": {"data":{"site":{"siteMetadata":{"title":"张小伦的网络日志","description":"欢迎来到张小伦的网络日志 \n\t\t一个记录生活，分享心得的博客","menu":[{"id":"home","name":"首页","url":"/"},{"id":"category","name":"分类","url":"/categories"},{"id":"archive","name":"归档","url":"/archives"},{"id":"about","name":"关于我","url":"/about"}]}},"markdownRemark":{"id":"e77303a8-af9e-573a-a995-e32825c478ad","html":"<blockquote>\n<p>原文标题：Node.js Module – exports vs module.exports</p>\n</blockquote>\n<p>原文链接：<a href=\"http://www.hacksparrow.com/node-js-exports-vs-module-exports.html\">http://www.hacksparrow.com/node-js-exports-vs-module-exports.html\r\n</a></p>\n<!--more-->\n<p>##exports 和 module.exports 有什么区别？</p>\n<p>你一定很熟悉 Node.js 模块中的用来在你的模块中创建函数的 exports 对象，就像下面这样。</p>\n<p>创建一个叫做 <code>rocker.js</code> 的文件：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">exports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">name</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'My name is Lemmy Kilmister'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>然后可以在另外一个文件中调用 <code>rocker.js</code> :</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> rocker <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./rocker.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\nrocker<span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'My name is Lemmy Kilmister'</span></code></pre></div>\n<p>但是，<code>module.exports</code> 到底什么？它是合法的吗？</p>\n<p>令人吃惊的是：<code>module.exports</code> 是真实存在的。<code>exports</code>  只不过是 <code>module.exports</code> 的帮手而已。你的模块直接返回返回 <code>module.exports</code> 给调用者，而不是 <code>exports</code> 。所有的 <code>exports</code> 做的工作实际上是收集属性，如果 <code>module.exports</code> 当前没有任何属性，<code>exports</code>便将收集到的属性添加到 <code>module.exports</code> 上。如果 <code>module.exports</code>\r\n已经存在若干属性，所以 <code> exports</code> 上的属性都会被忽略。</p>\n<p>修改 <code>rocker.js</code> 文件：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token string\">'ROCK IT!'</span><span class=\"token punctuation\">;</span>\r\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">name</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'My name is Lemmy Kilmister'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>在另一个文件中调用 <code>rocker.js</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> rocker <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./rocker.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\nrocker<span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// TypeError: Object ROCK IT! has no method 'name'</span></code></pre></div>\n<p>上述例子中的 <code>rocker</code> 模块完全将 <code>exports.name</code> 忽略了，只返回了一个 String 字符串：<code>‘ROCK IT!’</code> 。 从这个例子你大概明白了：你的模块并不一定总是一个模块的实例(module instance)，它可以是任何合法的 JavaScript 对象——boolean, number, date, JSON, string, function, array 和其他的。你的模块可以是任何你设置的  <code>module.exports</code> 的值。如果你没有明确地为  <code>module.exports</code> 设置任何值，那么 <code>exports</code> 中的属性会自动添加到 <code>module.exports<code> 中，然后并返回它。</p>\n<p>在这种情况下，你的模块是一个类：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> age</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">about</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span><span class=\"token string\">' is '</span><span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">+</span><span class=\"token string\">' years old'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>而你可以像这样使用：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> Rocker <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./rocker.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Rocker</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Ozzy'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">62</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\nr<span class=\"token punctuation\">.</span><span class=\"token function\">about</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ozzy is 62 years old</span></code></pre></div>\n<p>在这时候你的模块是一个数组：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\r\n    <span class=\"token string\">'Lemmy Kilmister'</span><span class=\"token punctuation\">,</span> \r\n    <span class=\"token string\">'Ozzy Osbourne'</span><span class=\"token punctuation\">,</span> \r\n    <span class=\"token string\">'Ronnie James Dio'</span><span class=\"token punctuation\">,</span> \r\n    <span class=\"token string\">'Steven Tyler'</span><span class=\"token punctuation\">,</span> \r\n    <span class=\"token string\">'Mick Jagger'</span>\r\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>而你可以这样使用：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> rocker <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./rocker.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Rockin in heaven: '</span> <span class=\"token operator\">+</span> rocker<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//Rockin in heaven: Ronnie James Dio</span></code></pre></div>\n<p>现在你应该明白了点什么：<br>\n如果你想让你的模块返回一个特殊的对象类型，比如构造函数，那么你得使用 module.exports ；如果你只想模块作为一个典型的模块实例（module instance），那么就用<code>exports</code>。</p>\n<p>把属性添加到 <code>module.exports</code> 中和添加到 <code>exports</code> 中的结果是一样的。比如像这样：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">name</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'My name is Lemmy Kilmister'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>其实和下面的是一样的：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">exports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">name</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'My name is Lemmy Kilmister'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>但是要注意，他们不是同一个东西。就像之前说的一样，<code>exports</code>  只不过是 <code>module.exports</code> 的帮手而已。话虽如此，<code>exports</code>还是推荐的对象，除非你想把你模块的对象类型从传统的模块实例（module instance）修改为其他的。</p>\n<p>只要你没有使用赋值运算重写<code>module.exports</code>对象，任何添加到 <code>module.exports</code>和<code>exports</code>的属性都能够在 <code>require</code>模块中。</p>\n<p>比如这是你的模块中的内容：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> <span class=\"token number\">68</span><span class=\"token punctuation\">;</span>\r\nexports<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'Lemmy Kilmister'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>下面的代码可以很好的工作：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> rocker <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./rocker.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'%s is %s'</span><span class=\"token punctuation\">,</span> rocker<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> rocker<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Lemmy Kilmister is 68</span></code></pre></div>\n<p>但是，如果你在你的模块中重写了<code>module.exports</code>中的任何地方，代码便会出错：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token string\">'LOL'</span><span class=\"token punctuation\">;</span>\r\nmodule<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> <span class=\"token number\">68</span><span class=\"token punctuation\">;</span>\r\nexports<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'Lemmy Kilmister'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>或者这样：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> <span class=\"token number\">68</span><span class=\"token punctuation\">;</span>\r\nexports<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'Lemmy Kilmister'</span><span class=\"token punctuation\">;</span>\r\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token string\">'WTF'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>顺序没有关系，<code>rocker.age</code> 和 <code>rocker.name</code> 将显示为 <code>undefined</code>。</p>\n<p>并且注意：只是因为 <code>module.exports</code> 和  <code>exports</code> 都能输出模块，并不意味这你可以组合使用。我的建议是，坚持使用 <code>exports.*</code>，明白<code>module.exports</code></p>\n<p>我希望这篇文章能帮助你理解exports和module.exports之间的不同，并且能进一步的理解模块在Node.js中是怎么工作的。</p>\n<p>(完)</p>\n<p><strong>翻译水平有待提高，所翻译的博文并不是按照原文一句一句翻译，而是添加了自己对文章的理解。如有不正之处，欢迎指正！</strong>\r\n<strong>个人笔记，仅供参考。</strong></p>\n<blockquote>\n<p>参考:</p>\n</blockquote>\n<p><a href=\"http://www.hacksparrow.com/node-js-exports-vs-module-exports.html\">http://www.hacksparrow.com/node-js-exports-vs-module-exports.html\r\n</a></p>","frontmatter":{"title":"【译】Node.js的模块-exports和module.exports","date":"April 26, 2014","description":null,"categories":["博客译文"],"tags":["译文","Node.js"]}},"previous":{"fields":{"slug":"/blogs/(译)node.js的全局变量/"},"frontmatter":{"title":"【译】Node.js的全局变量"}},"next":{"fields":{"slug":"/blogs/Node学习笔记-Node.js中的模块和包/"},"frontmatter":{"title":"Node学习笔记-Node.js中的模块","draft":null,"tags":["笔记","Node.js"],"categories":["Node.js"],"status":"publish"}}},"pageContext":{"id":"e77303a8-af9e-573a-a995-e32825c478ad","previousPostId":"6c0e983c-34d7-5af8-ae56-aedcee7c768e","nextPostId":"8f8ec765-4a44-59d9-98d3-bb41e81cfd67"}},
    "staticQueryHashes": ["2841359383"]}