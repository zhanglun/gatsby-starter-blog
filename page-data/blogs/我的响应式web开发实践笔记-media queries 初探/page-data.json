{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/blogs/我的响应式web开发实践笔记-media queries 初探/",
    "result": {"data":{"site":{"siteMetadata":{"title":"张小伦的网络日志","description":"欢迎来到张小伦的网络日志 \n\t\t一个记录生活，分享心得的博客","menu":[{"id":"home","name":"首页","url":"/"},{"id":"category","name":"分类","url":"/categories"},{"id":"archive","name":"归档","url":"/archives"},{"id":"about","name":"关于我","url":"/about"}]}},"markdownRemark":{"id":"74838cde-8c82-51e6-a77e-f14d4764919c","html":"<blockquote>\n<p>很久以前就接触到了响应式Web开发这回事，自己也玩弄过一阵。当时没有整理成笔记，现在在重构自己的在线简历以及hexo主题制作过程中涉及到，就顺手整理成一个系列吧。</p>\n</blockquote>\n<p>响应式web设计并非新的技术，只不过将已有的开发技巧（弹性布局、弹性图片和媒体查询等）整合在了一起，</p>\n<h3>先来说说媒体查询（Media Queries）</h3>\n<p>早在 HTML4 和 CSS2 的时代，就已经支持采用不同的样式表来适配不同的媒体设备类型。比如，一个文档在屏幕上和打印时可能使用不同的样式表。在 HTML4中，可以这么写：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">media</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>screen<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sans-serif.css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">media</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>print<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>serif.css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>在内联的 CSS 样式中，可以像这样指定一部分CSS样式块应用在指定的媒体设备上：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@media</span> screen</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token selector\">*</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> sans-serif <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>媒体类型就不在此列举了。如果想让多个媒体设备采用同一套样式，只需在media属性中添加媒体类型的名称，用逗号分开就可以了：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">media</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>screen, print, resolution > 90dpi<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>serif.css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\r\n    <span class=\"token atrule\"><span class=\"token rule\">@media</span> screen</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token selector\">*</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> sans-serif <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>而CSS3 中的媒体查询（Media Queries）就是建立在 HTML4 的媒体查询的语法机制之上，其语法符合 HTML4 中保留的媒体类型语法。HTML4 中的 <code class=\"language-text\">media</code> 属性同样存在于 XHTML 和 一般的 XML 中。但是，媒体查询的解析规则不兼容 HTML4 的解析规则，因此，适用于 CSS 中的媒体查询。</p>\n<p>CSS3 中的媒体查询一个媒体类型和零个或者多个检查特定媒体功能的状况的表达式组成。\r\n这些表达式会被解析成真或假。如果媒体查询中的媒体类型与文档要展示的设备相符则查询结果为真，并且媒体查询中的所有表达式为真。媒体类型默认情况是 <code class=\"language-text\">all</code></p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">media</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>screen and (max-width: 800px)<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>example.css<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\r\n\r\n@import url(color.css) screen and (color);\r\n\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\r\n    <span class=\"token atrule\"><span class=\"token rule\">@media</span> screen <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 600px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token selector\">.facet_sidebar</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\r\n      <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>当媒体查询为真时，相关的样式表或样式规则就会按照正常的级联规则被应用。即使媒体查询返回假， &#x3C;\\link> 标签上带有媒体查询的样式表 仍将被下载 （只不过不会被应用）。</p>\n<p>可以这么理解：媒体查询无非就是检查当前用户代理是何种设备，设备的某些参数：媒体类型（media type） + CSS属性。</p>\n<h3>Media Queries支持的属性</h3>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>值</th>\n<th>MIN/MAX</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>color</td>\n<td>整数</td>\n<td>yes</td>\n<td>每种色彩的字节数</td>\n</tr>\n<tr>\n<td>color-index</td>\n<td>整数</td>\n<td>yes</td>\n<td>色彩表中的色彩数</td>\n</tr>\n<tr>\n<td>device-aspect-ratio</td>\n<td>整数/整数</td>\n<td>yes</td>\n<td>宽高比例</td>\n</tr>\n<tr>\n<td>device-height</td>\n<td>length</td>\n<td>yes</td>\n<td>设备屏幕的输出高度</td>\n</tr>\n<tr>\n<td>device-width</td>\n<td>length</td>\n<td>yes</td>\n<td>设备屏幕的输出宽度</td>\n</tr>\n<tr>\n<td>height</td>\n<td>length</td>\n<td>yes</td>\n<td>渲染界面的高度</td>\n</tr>\n<tr>\n<td>width</td>\n<td>length</td>\n<td>yes</td>\n<td>渲染界面的宽度</td>\n</tr>\n<tr>\n<td>grid</td>\n<td>整数</td>\n<td>no</td>\n<td>是否是基于格栅的设备</td>\n</tr>\n<tr>\n<td>monochrome</td>\n<td>整数</td>\n<td>yes</td>\n<td>单色帧缓冲器中每像素字节</td>\n</tr>\n<tr>\n<td>resolution</td>\n<td>分辨率(“dpi/dpcm”)</td>\n<td>yes</td>\n<td>分辨率</td>\n</tr>\n<tr>\n<td>scan</td>\n<td>Progressive interlaced</td>\n<td>no</td>\n<td>tv媒体类型的扫描方式</td>\n</tr>\n<tr>\n<td>orientation</td>\n<td>Portrait/landscape</td>\n<td>no</td>\n<td>横屏或竖屏</td>\n</tr>\n</tbody>\n</table>\n<h3>best breakpoints</h3>\n<p>我现在需要解决的问题是：针对不同屏幕大小的设备的的代码块的媒体查询判断条件该如何书写，在 stackoverflow 上看到的<a href=\"http://stackoverflow.com/questions/6370690/media-queries-how-to-target-desktop-tablet-and-mobile\">回答</a>，the best breakpoints:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\r\n    <span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span>320px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* smartphones, iPhone, portrait 480x320 phones */</span> <span class=\"token punctuation\">}</span>\r\n    <span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span>481px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* portrait e-readers (Nook/Kindle), smaller tablets @ 600 or @ 640 wide. */</span> <span class=\"token punctuation\">}</span>\r\n    <span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span>641px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* portrait tablets, portrait iPad, landscape e-readers, landscape 800x480 or 854x480 phones */</span> <span class=\"token punctuation\">}</span>\r\n    <span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span>961px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* tablet, landscape iPad, lo-res laptops ands desktops */</span> <span class=\"token punctuation\">}</span>\r\n    <span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span>1025px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* big landscape tablets, laptops, and desktops */</span> <span class=\"token punctuation\">}</span>\r\n    <span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span>1281px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* hi-res laptops and desktops */</span> <span class=\"token punctuation\">}</span>\r\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h3>如何在 sass 中使用编写媒体查询模块</h3>\n<p>可以参考这篇文章：<a href=\"http://thesassway.com/intermediate/responsive-web-design-in-sass-using-media-queries-in-sass-32\">Responsive Web Design in Sass: Using media queries in Sass 3.2</a>\r\n首先，最简单的是使用 CSS 的语法：</p>\n<div class=\"gatsby-highlight\" data-language=\"sass\"><pre class=\"language-sass\"><code class=\"language-sass\"><span class=\"token comment\">// set a variable for the font size</span>\r\n<span class=\"token variable-line\"><span class=\"token variable\">$h1-size</span><span class=\"token punctuation\">:</span> 36px</span>\r\n\r\n<span class=\"token selector\">h1 {</span>\r\n<span class=\"token property-line\">  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$h1-size</span>;</span>\r\n<span class=\"token selector\">}</span>\r\n\r\n<span class=\"token comment\">// this will only affect wide screens</span>\r\n<span class=\"token atrule-line\"><span class=\"token atrule\">@media</span> screen and (min-width: 1024px) {</span>\r\n  <span class=\"token selector\">h1 {</span>\r\n<span class=\"token property-line\">    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$h1-size</span> <span class=\"token operator\">*</span> 1.5;</span>\r\n  <span class=\"token selector\">}</span>\r\n<span class=\"token selector\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">// 编译后：\r\nh1</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 36px<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> screen <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 1024px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token selector\">h1</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 54px<span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>同时，sass 为 CSS 的书写提供了是一个相当杀手级功能：当你在其它选择器中嵌套 <code class=\"language-text\">@media</code> 时，如果在嵌套的 @media 中添加的属性，sass 会向上一层层查找选择器，将@media中添加的属属性应用在查找到的选择器上，并将其插入到 @media 的代码块中：</p>\n<div class=\"gatsby-highlight\" data-language=\"sass\"><pre class=\"language-sass\"><code class=\"language-sass\"><span class=\"token selector\">.profile-pic {</span>\r\n<span class=\"token property-line\">    <span class=\"token property\">float</span><span class=\"token punctuation\">:</span> left;</span>\r\n<span class=\"token property-line\">    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 250px;</span>\r\n    <span class=\"token selector\">a {</span>\r\n<span class=\"token property-line\">        <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> black;</span>\r\n<span class=\"token atrule-line\">        <span class=\"token atrule\">@media</span> screen and (max-width: 320px) {</span>\r\n<span class=\"token property-line\">            <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100px;</span>\r\n<span class=\"token property-line\">            <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red;</span>\r\n        <span class=\"token selector\">}</span>\r\n<span class=\"token atrule-line\">        <span class=\"token atrule\">@media</span> screen and (min-width: 1200px) {</span>\r\n<span class=\"token property-line\">            <span class=\"token property\">float</span><span class=\"token punctuation\">:</span> none;</span>\r\n<span class=\"token property-line\">            <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> blue;</span>\r\n        <span class=\"token selector\">}</span>\r\n    <span class=\"token selector\">}</span>\r\n<span class=\"token selector\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">// 编译后：\r\n.profile-pic</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token property\">float</span><span class=\"token punctuation\">:</span> left<span class=\"token punctuation\">;</span>\r\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 250px\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token selector\">.profile-pic a</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> black\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> screen <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 320px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token selector\">.profile-pic a</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\r\n        <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> screen <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 1200px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token selector\">.profile-pic a</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token property\">float</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\r\n        <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> blue\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>其实这个东西也是很好理解的，就不过多解释了，省得啰嗦。但是要记住：还有很多种变化的写法，比如在query中使用变量，在代码块中使用 <code class=\"language-text\">@extend</code>.etc。多用用就好了</p>\n<h3>关于 min-width/min-height 和 max-width/max-height 的补充：2014/10/18</h3>\n<p>min-width(height): 最小宽度(高度)；在媒体查询中作为检查条件时，指的是渲染界面的最小宽度（高度）。也就是说当宽度（高度）大于给定的数值时才使用这一块代码块（没有使用的 Media Queries 代码块也会加载）；相反地，max-width(height) 意思就是：当宽度（高度）小于给定的数值时才使用这一块代码块。指定的数值是一个临界值。</p>\n<p>有意思的东西来了！</p>\n<p>看下面的代码：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.container</span><span class=\"token punctuation\">{</span>\r\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span>white<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> screen <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span>320px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span> \r\n    <span class=\"token selector\">.container</span><span class=\"token punctuation\">{</span>\r\n        <span class=\"token property\">background</span><span class=\"token punctuation\">:</span>red<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> screen <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span>481px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span> \r\n    <span class=\"token selector\">.container</span><span class=\"token punctuation\">{</span>\r\n        <span class=\"token property\">background</span><span class=\"token punctuation\">:</span>blue<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>根据CSS的解析规则，过程如下：</p>\n<ol>\n<li>container的背景色为white；</li>\n<li>当宽度大于320px时，container的背景色为red；</li>\n<li>当宽度大于481px时，container的背景色为blue；</li>\n</ol>\n<p>这可能是你想要的顺序，但是如果 你这样：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.container</span><span class=\"token punctuation\">{</span>\r\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span>white<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> screen <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span>320px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span> \r\n    <span class=\"token selector\">.container</span><span class=\"token punctuation\">{</span>\r\n        <span class=\"token property\">background</span><span class=\"token punctuation\">:</span>red<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> screen <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span>481px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span> \r\n    <span class=\"token selector\">.container</span><span class=\"token punctuation\">{</span>\r\n        <span class=\"token property\">background</span><span class=\"token punctuation\">:</span>blue<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>根据CSS的解析规则，过程如下：</p>\n<ol>\n<li>container的背景色为white；</li>\n<li>当宽度小于320px时，container的背景色为red；</li>\n<li>当宽度小于481px时，container的背景色为blue；</li>\n</ol>\n<p>好问题来了，小于320 不就是 小于 481 了嘛？后面样式直接覆盖了前面的啊！所以在小于481px的渲染宽度中，颜色都是blue。</p>\n<p>同样的问题：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.container</span><span class=\"token punctuation\">{</span>\r\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span>white<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> screen <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span>481px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span> \r\n    <span class=\"token selector\">.container</span><span class=\"token punctuation\">{</span>\r\n        <span class=\"token property\">background</span><span class=\"token punctuation\">:</span>blue<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n\r\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> screen <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span>321px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span> \r\n    <span class=\"token selector\">.container</span><span class=\"token punctuation\">{</span>\r\n        <span class=\"token property\">background</span><span class=\"token punctuation\">:</span>red<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>根据CSS的解析规则，过程如下：</p>\n<ol>\n<li>container的背景色为white；</li>\n<li>当宽度大于481px时，container的背景色为blue；</li>\n<li>当宽度大于321px时，container的背景色为red；</li>\n</ol>\n<p>其结果显而易见，后面的样式（当宽度大于321px时）直接覆盖了前面的（当宽度大于481px时），所以在大于321px的渲染宽度中，颜色都是red。这也是我们不想看到的结果。</p>\n<p>为了避免出现上面这混乱的结果，我个人认为可以酱紫：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">max大的。min小的。  \r\n\r\n使用max时，值从大到小，依次是，`小于1024px`, `小于961px`, `小于641px`.etc。这是一种桌面端优先的方式，先考虑渲染宽度大的设备。\r\n\r\n使用min时，值从小到大，依次是，`大于320px`, `大于481px`, `小于641px`.etc。这是一种移动端优先的方式，先考虑渲染宽度小的设备。\r\n\r\n如果这样理解的话，我感觉自己不会混乱了~~</code></pre></div>\n<p>参考：</p>\n<p>css3-mediaqueries<a href=\"http://www.w3.org/TR/css3-mediaqueries/\">http://www.w3.org/TR/css3-mediaqueries/</a><br>\n前端观察<a href=\"http://www.qianduan.net/media-type-and-media-query.html\">http://www.qianduan.net/media-type-and-media-query.html</a><br>\nW3cPlus<a href=\"http://www.w3cplus.com/content/css3-media-queries\">http://www.w3cplus.com/content/css3-media-queries</a></p>","frontmatter":{"title":"我的响应式web开发实践笔记-Media Queries 初探","date":"October 10, 2014","description":null,"categories":["前端"],"tags":["CSS"]}},"previous":{"fields":{"slug":"/blogs/规范之路-重新认识了Float/"},"frontmatter":{"title":"规范之路-重新认识了Float"}},"next":{"fields":{"slug":"/blogs/使用python抓取知乎日报的api数据/"},"frontmatter":{"title":"使用python抓取知乎日报的API数据","draft":null,"tags":["Python","笔记"],"categories":["Python"],"status":"publish"}}},"pageContext":{"id":"74838cde-8c82-51e6-a77e-f14d4764919c","previousPostId":"19b0e181-9924-5a00-871d-ec208b1e8619","nextPostId":"a047a6f1-912c-5fb8-acb7-c32cf72349ed"}},
    "staticQueryHashes": ["2841359383"]}