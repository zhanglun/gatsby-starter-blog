{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/blogs/Node学习笔记-Server-Side Templates/",
    "result": {"data":{"site":{"siteMetadata":{"title":"张小伦的网络日志","description":"欢迎来到张小伦的网络日志 \n\t\t一个记录生活，分享心得的博客","menu":[{"id":"home","name":"首页","url":"/"},{"id":"category","name":"分类","url":"/categories"},{"id":"archive","name":"归档","url":"/archives"},{"id":"about","name":"关于我","url":"/about"}]}},"markdownRemark":{"id":"3e7b58bd-4b35-56f3-b0f2-967918f77fa0","html":"<blockquote>\n<p>因为各种版本的更新，文中的例子可能失效无法运行。毕竟<em><strong>Node for Front-End Developer</strong></em>这本书已经出现很久了。</p>\n</blockquote>\n<h2>Creating a Dynamic Page</h2>\n<p>不像其他的服务端语言开发，Node没有暗示你需要使用任何的模板引擎来创建动态页面。有很多JS模板引擎，而且这个数量还在增加。所以有很多选择的对象。使用哪一个模板引擎并不重要，重要的是你需要什么样子的引擎，什么样子的引擎适合你。</p>\n<p>当你在选择模板引擎的时候，你可能需要考虑吧下面的这几个问题：</p>\n<ul>\n<li>是否需要除了JavaScript之外其他的语言\n<ul>\n<li>如果是，你将没法在客户端上使用</li>\n</ul>\n</li>\n<li>是否依赖已经存在DOM结构\n<ul>\n<li>如果是，你需要在Node中预先编写一端DOM来使用它，这个很easy，但是多走了一步</li>\n</ul>\n</li>\n<li>在模板第一次渲染之前，是否允许模板一次编译完成并缓存\n<ul>\n<li>如果你想在前台解析所有的模板或者你渲染的模板会重复使用多次，你可能会比较关心这个</li>\n</ul>\n</li>\n<li>模板中可以使用多少逻辑\n<ul>\n<li>一些模板的提供少量的逻辑处理，有些允许在模板中编写JS代码块。不同模板的不同特性将影响到你的结构，值得去做点研究</li>\n</ul>\n</li>\n</ul>\n<p>为了简单化，我们使用Mustache模板引擎。如果你没有使用过任何的JS模板引擎，Mustache是一个好的开始，因为它站在逻辑与非逻辑中间，它提供了一系列方法，但是又能使用完整的JavaScript。再者，它的语法也用在其他的一些模板引擎中，对你来说是个好事。</p>\n<p>我们的第一个服务端模板是这样一个包含表单的页面，用以编辑用户的相关信息 和一个接受提交的页面。</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!--edit.html--></span>\r\n\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>{{pageheader}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>POST<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span>First name:\r\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>firstName<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{firstName}}<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span>Last name:\r\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>lastName<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{lastName}}<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Save<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span>\r\n\r\n<span class=\"token comment\">&lt;!--result.html--></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>Edit finish!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Hello，Mr.{{firstname}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>双花括号是模板的定义符号，告诉Mustache在页面渲染的时候在何处填充传递过来的数据。\r\n使用Mustache之前，需要使用npm安装Mustache，具体的可以去<a href=\"http://mustache.github.io/\">官网</a>查看,然后修改代码去渲染一个模板文件。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> http <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"path\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    connect <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"connect\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">var</span> bodyParser <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"body-parser\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>bodyParser<span class=\"token punctuation\">.</span><span class=\"token function\">urlencoded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> extended<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>bodyParser<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n\r\n<span class=\"token keyword\">var</span> mu <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mu2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\nmu<span class=\"token punctuation\">.</span>root <span class=\"token operator\">=</span> __dirname <span class=\"token operator\">+</span> <span class=\"token string\">\"/public/\"</span><span class=\"token punctuation\">;</span>\r\n\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/edit'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n\r\n    <span class=\"token keyword\">var</span> view<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>\r\n        pagetitle<span class=\"token operator\">:</span><span class=\"token string\">\"edit your profile\"</span><span class=\"token punctuation\">,</span>\r\n        pageheader<span class=\"token operator\">:</span><span class=\"token string\">\"This page is perpare for everyone!\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">var</span> readable <span class=\"token operator\">=</span> mu<span class=\"token punctuation\">.</span><span class=\"token function\">compileAndRender</span><span class=\"token punctuation\">(</span><span class=\"token string\">'edit.html'</span><span class=\"token punctuation\">,</span> view<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    readable<span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/api/users/edit\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n    mu<span class=\"token punctuation\">.</span><span class=\"token function\">clearCache</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 暂时禁用模版缓存</span>\r\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">writeHead</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n        <span class=\"token string\">\"Content-Type\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"text/html\"</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>method <span class=\"token operator\">==</span> <span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n            res<span class=\"token punctuation\">.</span><span class=\"token function\">writeHead</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            res<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Server is missing!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n        <span class=\"token comment\">// POST 的数据</span>\r\n        <span class=\"token keyword\">var</span> userName <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n            firstname<span class=\"token operator\">:</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>firstName<span class=\"token punctuation\">,</span>\r\n            lastname<span class=\"token operator\">:</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>lastName\r\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token keyword\">var</span> readable <span class=\"token operator\">=</span> mu<span class=\"token punctuation\">.</span><span class=\"token function\">compileAndRender</span><span class=\"token punctuation\">(</span><span class=\"token string\">'result.html'</span><span class=\"token punctuation\">,</span> userName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        readable<span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 关于stream的更多用法，要找时间看看</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>method <span class=\"token operator\">==</span> <span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n\r\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">writeHead</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hey! Don't visit this page !\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   \r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\nhttp<span class=\"token punctuation\">.</span><span class=\"token function\">createServer</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</code></pre></div>\n<p>假设我们将 edit.html 文件保存在 public 目录中，上述的代码将会将内容转换为文本流保存到一个变量中，一旦模板完全加载，便将传递过来的信息渲染成HTML。然后再将最后的HTML输出。</p>\n<p><strong>注意：</strong> Mustache的具体使用方法请看官方给出的教程：<a href=\"http://mustache.github.io/\">官网</a>。</p>\n<h2>Partial Templates</h2>\n<p>在站点中，都会有很多相同的部分，比如导航，页脚或者其他的一些页面组件会在多个页面上出现。笨一点的话就是把HTML每个都复制粘贴一遍，但是将它们作为一个个简单的可共享的模板进行管理比起复制粘贴来说，更加的方便，有利于管理和维护。</p>\n<p>对于一些静态文件，如果我们不想重复的在每个模板中引用，我们可以为站点设置一个默认的模板，里面包含了静态文件的引用。对于页面上不同的内容，可以为其留下空间，在需要的时候利用它们。\r\n不同模板的嵌套采用不同的处理方法，当然具体的用法还是参照官网最直接。</p>\n<p>不只是html模板，如果我们想动态生成CSS（比如修改主题）或者JavaScript，同样可以使用模板来操作，修改文件类型就可以了。因为读取文件的时候将其看到做是一些字符串，这对Node的解析来说没有什么区别。</p>\n<p>例如，我们想利用Mustache根据用户定义的值来修改CSS文件，实现的方法与前面描述的加载HTML模板简直是一模一样，只不过requirejs请求的文件变成了CSS文件而已。假设从一个POST请求中接收到了修改样式的参数，然后根据这些参数来请求不同的CSS。</p>\n<p>Node里面的各种模块好蛋疼 ==!(未完……)</p>","frontmatter":{"title":"Node学习笔记-Server-Side Templates","date":"November 03, 2014","description":null,"categories":["Node.js"],"tags":["笔记","Node.js"]}},"previous":{"fields":{"slug":"/blogs/Node学习笔记-Data Sources and Flow Control/"},"frontmatter":{"title":"Node学习笔记-Data Sources and Flow Control"}},"next":{"fields":{"slug":"/blogs/Node学习笔记-Serving the content/"},"frontmatter":{"title":"Node学习笔记-Serving the content","draft":null,"tags":["笔记","Node.js"],"categories":["Node.js"],"status":"publish"}}},"pageContext":{"id":"3e7b58bd-4b35-56f3-b0f2-967918f77fa0","previousPostId":"889fa597-2cd6-5eca-9214-ceb65bc5b7b7","nextPostId":"4f4c6c60-b80b-5de8-97e5-416ad84b4c52"}},
    "staticQueryHashes": ["2841359383"]}