{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/blogs/踩坑日记-ie下a标签的虚线框/",
    "result": {"data":{"site":{"siteMetadata":{"title":"张小伦的网络日志","description":"欢迎来到张小伦的网络日志 \n\t\t一个记录生活，分享心得的博客","menu":[{"id":"home","name":"首页","url":"/"},{"id":"category","name":"分类","url":"/categories"},{"id":"archive","name":"归档","url":"/archives"},{"id":"about","name":"关于我","url":"/about"}]}},"markdownRemark":{"id":"ee9cfb6e-68b6-5d21-96ad-70a884f41437","html":"<h2>IE 下 a标签的虚线框</h2>\n<p>在 IE 中，点击 a 标签时， a 标签会被加上一个虚线框，很丑！！！！！</p>\n<!-- ![image](http://img3.picbed.org/uploads/2014/07/QQ20140718_1.png) -->\n<p>不同版本的IE解决方案不同：IE8 下只需为 a 标签添加一条 CSS 属性就可以 <code class=\"language-text\">outline:none</code>，顺便一提 ，这条属性可以取消浏览器中输入框获得焦点是丑逼逼的外框</p>\n<!-- ![image](http://img3.picbed.org/uploads/2014/07/QQ20140718_2.png) -->\n<p>但是在高贵的 IE7 中，即使是添加了 <code class=\"language-text\">outline: none</code>，虚线框依旧存在，在 HTML 上加 <code class=\"language-text\">hidefocus=\"true\"</code>　如</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;a href=\"http://www.zhanglun.github.io/\" class=\"active\" hidefocus=\"true\"></code></pre></div>\n<hr>\n<p>###强大的CSS选择器</p>\n<p>项目最低的兼容要求是 IE8 ，所有很多以前由于兼容性问题而不常用的CSS选择器和属性都可以使用。下面记录的都是以前基本上没有用到的但是却很有用的选择器，就拿属性选择器来说，简直遍地都是。</p>\n<p>#####直接相邻选择器 X+Y （兼容浏览器：IE7+、Firefox、Chrome、Safari、Opera）</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ul + p {\r\n    color: red;\r\n} </code></pre></div>\n<p>匹配在ul后面的第一个p，将段落内的文字颜色设置为红色。(只匹配第一个元素)。</p>\n<p>#####子选择器 X>Y （兼容浏览器：IE7+、Firefox、Chrome、Safari、Opera）</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">div#container > ul {\r\n    border: 1px solid black;\r\n} \r\n\r\n&lt;div id=\"container\">\r\n    &lt;ul class=\"son\">\r\n        &lt;li> List Item\r\n            &lt;ul>\r\n                &lt;li> Child &lt;/li>\r\n            &lt;/ul>\r\n        &lt;/li>\r\n        &lt;li> List Item &lt;/li>\r\n        &lt;li> List Item &lt;/li>\r\n        &lt;li> List Item &lt;/li>\r\n    &lt;/ul> \r\n&lt;/div></code></pre></div>\n<p>与后代选择器X Y不同的是，子选择器只对X下的<strong>直接子级Y</strong>起作用。在上面的css和html例子中，div#container>ul仅对container中<strong>最近一级的ul</strong>起作用(即拥有类名 son 的 ul)。</p>\n<p>####间接相邻选择器 X ~ Y （兼容浏览器：IE7+、Firefox、Chrome、Safari、Opera  ）\r\nul ~ p {\r\ncolor: red;\r\n}\r\n与前面提到的 X+Y 不同的是，X~Y 匹配与 X <strong>相同级别的所有Y元素</strong>，而<strong>X+Y只匹配第一个</strong>。</p>\n<p>这些选择器，给人的感觉是根据 HTML 的结构来选择对应的元素，比如说：选择在页面中相邻的元素；根据父元素选择子元素，或者兄弟元素，都依赖着结构，利用A去寻找B。下面说的 <strong>属性选择器</strong> 给人的感觉就不太一样</p>\n<p>####属性选择器 （兼容浏览器：IE7+、Firefox、Chrome、Safari、Opera）</p>\n<p>#####X[title]——匹配的是带有 <strong>title</strong> 属性的链接元素</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">a[title] {\r\n    color: green;\r\n}</code></pre></div>\n<p>#####X[title=“foo”]——匹配所有拥有href属性，且**href为<a href=\"http://css9.net**%E7%9A%84%E6%89%80%E6%9C%89%E9%93%BE%E6%8E%A5\">http://css9.net**的所有链接</a></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">a[href=\"http://css9.net\"] {\r\n    color: #1f6053; \r\n}</code></pre></div>\n<p>#####X[title*=“zhanglun”]——匹配的是href中**包含”zhanglun”*<em>的所有链接\r\na[href</em>=“css9.net”] {\r\ncolor: #1f6053;\r\n}</p>\n<p>#####X[href^=“http”]——匹配的是href中<strong>所有以http开头</strong>的链接</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">a[href^=\"http\"] {\r\n    background: url(path/to/external/icon.png) no-repeat;\r\n    padding-left: 10px;\r\n}</code></pre></div>\n<p>#####X[href$=“.jpg”]——匹配的是<strong>所有链接到扩展名为.jpg图片的链接</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">a[href^=\"http\"] {\r\n    background: url(path/to/external/icon.png) no-repeat;\r\n    padding-left: 10px;\r\n}   </code></pre></div>\n<p>#####X[data-<em>=“foo”]——匹配属性 data-</em> 为 “foo” 的元素</p>\n<p>在上一个选择器中提到如何匹配所有图片链接。如果使用X[href$=“.jpg”]实现，需要这样做：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">a[href$=\".jpg\"],\r\na[href$=\".jpeg\"],\r\na[href$=\".png\"],\r\na[href$=\".gif\"] {\r\n    color: red;\r\n}\r\n </code></pre></div>\n<p>看上去比较麻烦。另一个解决办法是为所有的图片链接加一个特定的属性，例如‘data-file’</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">html代码\r\n&lt;a href=\"path/to/image.jpg\" data-filetype=\"image\"> 图片链接 &lt;/a> \r\n\r\ncss代码如下：\r\na[data-filetype=\"image\"] {\r\n    color: red;\r\n}</code></pre></div>\n<p>这样所有链接到图片的链接字体颜色为红色。</p>\n<p>#####X[foo~=“bar”]——匹配属性值中用空格分隔的多个值中的一个</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">html代码\r\n&lt;a href=\"path/to/image.jpg\" data-info=\"external image\"> Click Me, Fool &lt;/a> \r\n\r\ncss代码\r\na[data-info~=\"external\"] {\r\n    color: red;\r\n}\r\na[data-info~=\"image\"] {\r\n    border: 1px solid black;\r\n}\r\n </code></pre></div>\n<p>在上面例子中，匹配data-info属性中包含“external”链接的字体颜色为红色。匹配data-info属性中包含“image”的链接设置黑色边框。<br>\n兼容浏览器：IE7+、Firefox、Chrome、Safari、Opera</p>","frontmatter":{"title":"踩坑日记-IE下 A 标签的虚线框和必须要会用的 CSS 选择器","date":"July 18, 2014","description":null,"categories":[],"tags":["CSS","笔记","兼容性","填坑日记"]}},"previous":{"fields":{"slug":"/blogs/git使用笔记(二)-撤销操作/"},"frontmatter":{"title":"git 使用笔记(二)-撤销操作"}},"next":{"fields":{"slug":"/blogs/git使用笔记(一)/"},"frontmatter":{"title":"Git 使用笔记(一)-入门级的操作","draft":null,"tags":["Git","笔记"],"categories":[],"status":"publish"}}},"pageContext":{"id":"ee9cfb6e-68b6-5d21-96ad-70a884f41437","previousPostId":"70304930-0fb9-5b3c-a611-402bfcfc6020","nextPostId":"58aa0b6a-c0c1-592f-9769-b07bf14534b2"}},
    "staticQueryHashes": ["2841359383"]}