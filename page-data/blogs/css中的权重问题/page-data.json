{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/blogs/css中的权重问题/",
    "result": {"data":{"site":{"siteMetadata":{"title":"张小伦的网络日志","description":"欢迎来到张小伦的网络日志 \n\t\t一个记录生活，分享心得的博客","menu":[{"id":"home","name":"首页","url":"/"},{"id":"category","name":"分类","url":"/categories"},{"id":"archive","name":"归档","url":"/archives"},{"id":"about","name":"关于我","url":"/about"}]}},"markdownRemark":{"id":"0db2258c-59a6-5f89-8eba-667140558ed1","html":"<blockquote>\n<p>自己对以后的方向很明确，但是却一直做不到。接连的 rejected 多少对自己有影响。不是自己不去争取，而是真的已经疲了，或者说自己也怂了。面试的时候已经不知道该怎么办，即使自己的知道的问题也只会模棱两可地回答。滚回学校慢慢学吧</p>\n</blockquote>\n<p>如果你现在问我CSS的权重，我也只能说个大概。于是开始整理有关的资料。</p>\n<h2>CSS Specificity</h2>\n<p>有时候你会发现自己辛辛苦苦写的CSS样式不起作用，文件引入了，浏览器也加载了，但就是不按照你想要的方式显示，这个时候你就需要考虑 CSS权重的问题。如果你对权重的工作方式有所了解，将会大大减少调试bug的时间。</p>\n<p>如果想解释权重的工作方式，最好的办法就是针对问题来分析。下面就是一个 CSS 样式没有按照期待的方式显示的例子。</p>\n<p>一个简单的无序列表</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;ul id=\"summer-drinks\">\r\n   &lt;li class=\"favorite\">Whiskey and Ginger Ale&lt;/li>\r\n   &lt;li>Wheat Beer&lt;/li>\r\n   &lt;li>Mint Julip&lt;/li>\r\n&lt;/ul></code></pre></div>\n<p>而在CSS中，是酱紫的：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ul#summer-drinks li {\r\n   font-weight: normal;\r\n   font-size: 12px;\r\n   color: black;\r\n}\r\n.favorite {\r\n  color: red;\r\n  font-weight: bold;\r\n}</code></pre></div>\n<p>但是你会发现，拥有class为favorite的li元素中的内容并没有像你期待的那样加粗变红。这就是权重引发的“血案“！别急别急，我们可以好好的捋一捋。</p>\n<h4>什么是CSS的权重</h4>\n<p>我的理解就是：CSS规则的优先顺序，权重高的优先。权利大的才有发言权。</p>\n<p>每个选择器都有自己的权重。你的每条css规则，都包含一个权重级别。权重决定了哪一条规则会被浏览器应用在元素上，如果两个选择器作用在同一元素上，则权重高者生效。</p>\n<p>那上面的例子来说，两个CSS选择器 <code class=\"language-text\">ul#summer-drinks</code> 和 <code class=\"language-text\">.favorite</code> 有自己的权重，而前者的权重高于后者。所以采用的样式由前者决定而非后者。</p>\n<h4>如何计算权重</h4>\n<p>规范中给出的定义在<a href=\"http://www.w3.org/TR/CSS2/cascade.html#specificity\">这里</a>，分成四种不同等级的基础权重值，选择器最终的权重（优先级）由四个值共同决定。这四个等级分别是：</p>\n<ol>\n<li>行内样式，html文档中定义的style，不包含选择器，直接对元素起作用。</li>\n<li>ID选择器</li>\n<li>类（class），属性选择器（attribute selector）和伪类选择器（pseudo-class-selector）</li>\n<li>元素和伪元素（pseudo-elements）</li>\n</ol>\n<p>搞明白了这几个等级，权重的计算也是很简单了，为了方便计算和描述，分别将这四个等级标记为a, b, c, d。</p>\n<ul>\n<li>如果样式声明来自行内样式（style），将不包含选择器，直接作用在元素上，权重的基础值记为<code class=\"language-text\">1</code>, a = 1;</li>\n<li>计算选择器中ID选择器的个数x，b = x;</li>\n<li>计算选择器中class选择器，属性选择器和伪类选择器的个数y，c = y;</li>\n<li>计算元素选择器和伪元素的个数z，d = z;</li>\n</ul>\n<p>就象这样：</p>\n<!--![http://ncuey-crispelite.stor.sinaapp.com/specificity-calculationbase.png](http://ncuey-crispelite.stor.sinaapp.com/specificity-calculationbase.png)   -->\n<p>最后的到的权重就是 <code class=\"language-text\">0(1), x, y, z</code>，把它看作一个4位数的数字，数字越大权重越高。可以这么记：从0开始，一个行内样式+1000，一个id+100，一个属性选择器/class或者伪类+10，一个元素名，或者伪元素+1.比如：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"> *             {}  /* a=0 b=0 c=0 d=0 -> specificity = 0,0,0,0 */\r\n li            {}  /* a=0 b=0 c=0 d=1 -> specificity = 0,0,0,1 */\r\n li:first-line {}  /* a=0 b=0 c=0 d=2 -> specificity = 0,0,0,2 */\r\n ul li         {}  /* a=0 b=0 c=0 d=2 -> specificity = 0,0,0,2 */\r\n ul ol+li      {}  /* a=0 b=0 c=0 d=3 -> specificity = 0,0,0,3 */\r\n h1 + *[rel=up]{}  /* a=0 b=0 c=1 d=1 -> specificity = 0,0,1,1 */\r\n ul ol li.red  {}  /* a=0 b=0 c=1 d=3 -> specificity = 0,0,1,3 */\r\n li.red.level  {}  /* a=0 b=0 c=2 d=1 -> specificity = 0,0,2,1 */\r\n #x34y         {}  /* a=0 b=1 c=0 d=0 -> specificity = 0,1,0,0 */\r\n style=\"\"          /* a=1 b=0 c=0 d=0 -> specificity = 1,0,0,0 */\r\n&lt;head>\r\n&lt;style type=\"text/css\">\r\n  #x97z { color: red }\r\n&lt;/style>\r\n&lt;/head>\r\n&lt;body>\r\n&lt;P id=\"x97z\" style=\"color: green\">\r\n&lt;/body></code></pre></div>\n<p>P标签的颜色将会是绿色，因为权重的关系，行内样式会覆盖其他定义的样式。</p>\n<p>借鉴一下老外的图：</p>\n<!--![1](http://ncuey-crispelite.stor.sinaapp.com/cssspecificity-calc-1.png)   -->\n<p>或者</p>\n<!--![2](http://ncuey-crispelite.stor.sinaapp.com/cssspecificity-calc-2.png)   -->\n<p>然后</p>\n<!--![4](http://ncuey-crispelite.stor.sinaapp.com/cssspecificity-calc-4.png)  -->\n<p>还有</p>\n<!--![5](http://ncuey-crispelite.stor.sinaapp.com/cssspecificity-calc-5.png)   -->\n<p><strong>要注意的是</strong>：</p>\n<ul>\n<li>通配符选择器 <code class=\"language-text\">*</code> 不具有特殊性，其权重为(0, 0, 0, 0)</li>\n<li>伪元素(0, 0, 0, 1)和伪类选择器(0, 0, 1, 0)不是同一个东西，他们的权重值也不一样</li>\n<li>伪类选择器 :not()不具有特殊性，它的权重由括号内的内容决定</li>\n</ul>\n<p>###特殊的 !important\r\n!important 用于单独指定某条样式中的单个属性。对于被指定的属性，有 !important 指定的权重值大于所有未用 !important 指定的规则。</p>\n<p>例如：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">#header nav ul li.current {\r\n\tcolor: red; font-weight: bold;\r\n}\r\n// 权重值为 0, 1, 1, 3\r\n\r\nli:hover {\r\n\tcolor: blue !important;\r\n    font-weight: normal;\r\n}\r\n\r\n// 权重值仅为0, 0, 0, 2</code></pre></div>\n<p>所以应用于相同元素时，前者生效。但是对于color这个属性，由于在后者中用 !important 做了指定，因此color将应用后者的规则。而font-weight则按照规定用前者的规则。</p>\n<p>如果多条规则中都对同一个属性指定了 !important ，这时 !important 的作用相互抵销，依然按abcd四组计算比较。</p>\n<p>参考自：</p>\n<p><a href=\"http://www.w3.org/TR/CSS2/cascade.html#specified-value\">WCR specified-value</a><br>\n<a href=\"http://css-tricks.com/specifics-on-css-specificity/\">specifics on css specificity</a><br>\n<a href=\"http://www.w3.org/TR/CSS2/cascade.html#specificity\">WCR specificity</a></p>","frontmatter":{"title":"CSS 中的权重问题","date":"September 26, 2014","description":null,"categories":["前端"],"tags":["CSS","笔记"]}},"previous":{"fields":{"slug":"/blogs/css元素居中对齐大法/"},"frontmatter":{"title":"CSS元素居中对齐大法"}},"next":{"fields":{"slug":"/blogs/git使用笔记(三)-分支的使用/"},"frontmatter":{"title":"Git 使用笔记(三)-分支的使用","draft":null,"tags":["Git","笔记"],"categories":[],"status":"publish"}}},"pageContext":{"id":"0db2258c-59a6-5f89-8eba-667140558ed1","previousPostId":"8ccedd08-437a-5682-acb4-4ab480752006","nextPostId":"c07f3b45-1ee4-523e-93a3-11a70fb13364"}},
    "staticQueryHashes": ["2841359383"]}