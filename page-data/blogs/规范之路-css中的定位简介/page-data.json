{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/blogs/规范之路-css中的定位简介/",
    "result": {"data":{"site":{"siteMetadata":{"title":"张小伦的网络日志","description":"欢迎来到张小伦的网络日志 \n\t\t一个记录生活，分享心得的博客","menu":[{"id":"home","name":"首页","url":"/"},{"id":"category","name":"分类","url":"/categories"},{"id":"archive","name":"归档","url":"/archives"},{"id":"about","name":"关于我","url":"/about"}]}},"markdownRemark":{"id":"fcdf7d73-8d61-56b6-9de1-09775e2a2964","html":"<p>在 CSS2.1 中，一个盒子会根据下面三种定位方案进行排列：</p>\n<ul>\n<li>标准流（Normal flow）：在 CSS2.1 中包括 块级盒子形成的块级格式化上下文（block formatting context），行级格式化上下文（inline formatting context）和采用了绝对定位（relative positioning）的盒子。</li>\n<li>浮动（Floats）：在浮动模型中，盒子先按照正常标准流（normal flow）排列，然后从 normal flow 中取出，将它尽可能的移动到左边或者右边</li>\n<li>绝对定位（Absoulte positioning）：整个盒子都将被从标准流中移出，相对于一个包含块（containing block）指定它自己的位置。将不会对它的兄弟元素有任何的影响。</li>\n</ul>\n<p>如果一个元素被浮动或者进行了绝对定位，或者元素本身是文档的根元素（root element）我们就可以说这个元素脱离了文档流（out of flow）。与 <code class=\"language-text\">out-of-flow</code> 相对的是 <code class=\"language-text\">in-flow</code>。元素A的流（the flow of an element A）是一个集合，这个集合包含了A本身和那些以A作为最近的脱离文档流的祖先元素的所有 in-flow 元素。</p>\n<!--![look at this](http://ncuey-crispelite.stor.sinaapp.com/QQ20140912-1.png) -->\n<p><code class=\"language-text\">position</code> 和 <code class=\"language-text\">float</code> 采用不同的方式来计算盒子的位置，这篇先简单的讲一下 <code class=\"language-text\">position</code></p>\n<p>###position的值</p>\n<p>position可以应用在任何元素上，它 的值有：static | relative | absolute | fixed | inherit|，默认值是 static。</p>\n<p><strong>static</strong><br>\n元素按标准流排列，‘top’, ‘right’, ‘bottom’, 和 ‘left’ 对元素没有影响。</p>\n<p><strong>relative</strong><br>\n元素的位置按照标准流（中的位置）计算（the position in normal flow），然后盒子相对它标准流中的位置偏移。比如B元素相对原来的位置发生偏移之后，它后面的元素的位置计算不会受到影响，就像B元素一直在原来的位置上呆着一样。对于 table-row-group, table-header-group, table-footer-group, table-row, table-column-group, table-column, table-cell, and table-caption 这些元素，没有定义 <code class=\"language-text\">position:relative</code>。</p>\n<p><strong>absolute</strong><br>\n盒子的位置由’top’, ‘right’, ‘bottom’, 和 ‘left’ 指定。这四个值指定的偏移都是相对于盒子的包含块（containing block）。绝对定位的盒子从标准流中被移除，这一位置它们不会对接下来的相邻元素的布局产生影响。同时绝对定位的元素也有 magin ，不会与任何的 元素发生 margin坍塌现象。</p>\n<p><strong>fixed</strong><br>\n盒子的位置根据 ‘absolute’ model 来计算，除此之外，在不同的设备中，盒子固定的位置不太一样。在手持设备，投影设备，屏幕，电子打字机和电视上（handheld, projection, screen, tty, and tv media types），盒子的位置相对于视口（viewport）固定，当视口滚动的时候，盒子也不会移动；在打印机\r\n上时，盒子在每个page（就是每张纸）上都会被渲染，位置相对page形成的盒子固定，即使页面是通过一个视口看到的（比如 打印预览）。对于其他的媒体类型来说，这种固定的盒子是未定义的。有时候可能想让一个盒子一直保持在屏幕的顶部，但是不想在打印的时候出现在每个页面上。使用媒体查询（@media rule）可以很轻松的做到这一定。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">@media screen { \r\n\th1#first { position: fixed } \r\n}\r\n@media print { \r\n\th1#first { position: static }\r\n}</code></pre></div>\n<p>用户代理不能对固定的盒子中的内容做翻页处理，因为用户代理有可能以某种方式将不可见的内容输出（我没有实践过，see <a href=\"http://www.w3.org/TR/CSS21/page.html#outside-page-box\">“Content outside the page box”</a>）。暂时先搁着，先看完 chapter 9 (￣◇￣;)</p>\n<p>###盒子的偏移量（Box offsets）\r\n一个元素的 position 属性的值不是 “static“ 的时候，我们可以说这个元素使用了定位（is positioned）。使用了定位后的元素形成一个 “定位盒子“（positioned boxes），这个定位盒子的位置根据’top’, ‘right’, ‘bottom’, 和 ‘left’四个属性来计算，这四个属性决定了盒子的offset。</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Value</td>\n<td>&#x3C;length></td>\n</tr>\n<tr>\n<td>Initial</td>\n<td>auto</td>\n</tr>\n<tr>\n<td>Applies to</td>\n<td>positioned elements</td>\n</tr>\n<tr>\n<td>Inherited</td>\n<td>no</td>\n</tr>\n<tr>\n<td>Percentages</td>\n<td>refer to height of containing block</td>\n</tr>\n<tr>\n<td>Media</td>\n<td>visual</td>\n</tr>\n<tr>\n<td>Computed value</td>\n<td>if specified as a length, the corresponding absolute length; if specified as a percentage, the specified value; otherwise, ‘auto’.</td>\n</tr>\n</tbody>\n</table>\n<p>‘top’/‘right’/‘bottom’/‘left’四个属性的作用也很好理解，分别定义绝对定位的盒子的上/右/下/左部的margin边缘到这个盒子的包含块的上/右/下/左部边缘的距离。对于相对定位的盒子，偏移量参照的是盒子自身的上/右/下/左部边缘（包含marign），即相对于盒子处于标准流中的位置。</p>\n<p>当它们的值定义为百分比时，偏离量的计算方法是：包含块的宽度的百分比（定义 left 或者 right）或者高度的百分比（定义 top 或者 bottom）。</p>\n<p>先记录到这里，回头在看一下 标准中的 <a href=\"http://www.w3.org/TR/CSS21/visuren.html#normal-flow\">Normal flow</a> 和 <a href=\"http://www.w3.org/TR/CSS21/visuren.html#floats\">Floats</a> 以及 <a href=\"http://www.w3.org/TR/CSS21/visuren.html#absolute-positioning\">absolute-positioning</a></p>\n<p>(￣◇￣;)</p>","frontmatter":{"title":"规范之路-CSS中的定位简介","date":"September 12, 2014","description":null,"categories":["重构"],"tags":["CSS","笔记"]}},"previous":{"fields":{"slug":"/blogs/git使用笔记(三)-分支的使用/"},"frontmatter":{"title":"Git 使用笔记(三)-分支的使用"}},"next":{"fields":{"slug":"/blogs/将footer始终保持在页面底部的方法一/"},"frontmatter":{"title":"如何将页面的footer保持在页面的底部一","draft":null,"tags":["CSS","兼容性"],"categories":[],"status":"publish"}}},"pageContext":{"id":"fcdf7d73-8d61-56b6-9de1-09775e2a2964","previousPostId":"c07f3b45-1ee4-523e-93a3-11a70fb13364","nextPostId":"57872a03-d057-5a0e-8210-410f32842772"}},
    "staticQueryHashes": ["2841359383"]}