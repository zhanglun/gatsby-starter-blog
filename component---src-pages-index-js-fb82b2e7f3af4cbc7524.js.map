{"version":3,"file":"component---src-pages-index-js-fb82b2e7f3af4cbc7524.js","mappings":"iMAIaA,EAAc,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACtBC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KAC9CF,EAAcF,EAAKE,aAAe,GAExC,OACEG,EAAAA,cAAAA,KAAAA,CAAIC,IAAKN,EAAKG,OAAOC,MACnBC,EAAAA,cAAAA,UAAAA,CACEE,UAAU,oBACVC,WAAS,EACTC,SAAS,6BAETJ,EAAAA,cAAAA,SAAAA,KACGH,EAAYQ,YACXL,EAAAA,cAACM,EAAAA,EAAD,CAAeC,MAAOV,EAAYQ,aAEpCL,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAACQ,EAAAA,KAAD,CACEC,GAAId,EAAKG,OAAOC,KAChBW,SAAS,MACTR,UAAU,sCAEVF,EAAAA,cAAAA,OAAAA,CAAMU,SAAS,YAAYd,KAG/BI,EAAAA,cAAAA,QAAAA,KAAQL,EAAKE,YAAYc,OAE3BX,EAAAA,cAAAA,UAAAA,KACEA,EAAAA,cAAAA,IAAAA,CACEY,wBAAyB,CACvBC,OAAQlB,EAAKE,YAAYiB,aAAenB,EAAKoB,SAE/CL,SAAS,iBAGbV,EAAAA,cAAAA,SAAAA,KACEA,EAAAA,cAACQ,EAAAA,KAAD,CAAMC,GAAId,EAAKG,OAAOC,KAAMW,SAAS,MAAMR,UAAU,aAArD,iBClCGc,EAAc,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC5B,OACEjB,EAAAA,cAAAA,KAAAA,CAAIE,UAAU,gBACXe,EAAMC,KAAI,SAACvB,EAAMwB,GAChB,OAAOnB,EAAAA,cAACN,EAAD,CAAaC,KAAMA,EAAMM,IAAKkB,U,mECFhCb,EAAgB,SAACc,GAC5B,IAAQb,EAAUa,EAAVb,MAER,OACEP,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,yBACZK,EAAMW,KAAI,SAACG,EAAUF,GACpB,OACEnB,EAAAA,cAAAA,OAAAA,CAAME,UAAU,mBAAmBD,IAAKkB,GACrCE,S,iFC+Bb,UAvCkB,SAAC,GAAwB,IAAD,MAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwB9B,QAAxB,QACZqB,EAAQK,EAAKK,kBAAkBC,MAC/BC,GAAW,UAAAP,EAAKG,KAAKC,oBAAV,eAAwBI,OAAQ,GAC3ChB,GAAc,UAAAQ,EAAKG,KAAKC,oBAAV,eAAwBZ,cAAe,GAE3D,OAAqB,IAAjBG,EAAMc,OAEN,gBAAC,IAAD,CAAQR,SAAUA,EAAU3B,MAAO4B,EAAWM,KAAMD,GAClD,gBAAC,IAAD,CAAKjC,MAAM,cACX,uLAUJ,gBAAC,IAAD,CACE2B,SAAUA,EACV3B,MAAO4B,EACPM,KAAMD,EACNf,YAAaA,GAEb,gBAAC,IAAD,CAAKlB,MAAM,cACX,gBAAC,IAAD,CAAaqB,MAAOA,IACpB,uBAAKf,UAAU,cACZ,IACD,6BACA,gBAAC,EAAAM,KAAD,CAAMC,GAAI,UAAWuB,IAAI,QAAzB","sources":["webpack://gatsby-starter-blog/./src/components/Article/ArticleItem.tsx","webpack://gatsby-starter-blog/./src/components/Article/ArticleList.tsx","webpack://gatsby-starter-blog/./src/components/CategoryLabel/index.tsx","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { CategoryLabel } from \"../CategoryLabel\"\n\nexport const ArticleItem = ({ post }) => {\n  const title = post.frontmatter.title || post.fields.slug\n  const frontmatter = post.frontmatter || {}\n\n  return (\n    <li key={post.fields.slug}>\n      <article\n        className=\"article-list-item\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          {frontmatter.categories && (\n            <CategoryLabel items={frontmatter.categories} />\n          )}\n          <h2>\n            <Link\n              to={post.fields.slug}\n              itemProp=\"url\"\n              className=\"article-item-title hover-underline\"\n            >\n              <span itemProp=\"headline\">{title}</span>\n            </Link>\n          </h2>\n          <small>{post.frontmatter.date}</small>\n        </header>\n        <section>\n          <p\n            dangerouslySetInnerHTML={{\n              __html: post.frontmatter.description || post.excerpt,\n            }}\n            itemProp=\"description\"\n          />\n        </section>\n        <footer>\n          <Link to={post.fields.slug} itemProp=\"url\" className=\"read-more\">\n            READ MORE\n          </Link>\n        </footer>\n      </article>\n    </li>\n  )\n}\n","import React from \"react\"\nimport { ArticleItem } from \"./ArticleItem\"\n\nimport \"./index.css\"\n\nexport const ArticleList = ({ posts }) => {\n  return (\n    <ul className=\"article-list\">\n      {posts.map((post, idx) => {\n        return <ArticleItem post={post} key={idx} />\n      })}\n    </ul>\n  )\n}\n","import React from \"react\"\nimport \"./index.css\"\n\ntype CategoryListProps = {\n  items: { name: string }[]\n}\n\nexport const CategoryLabel = (props: CategoryListProps) => {\n  const { items } = props\n\n  return (\n    <div className=\"article-category-list\">\n      {items.map((category, idx) => {\n        return (\n          <span className=\"article-category\" key={idx}>\n            {category}\n          </span>\n        )\n      })}\n    </div>\n  )\n}\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport { ArticleList } from \"../components/Article/ArticleList\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n  const siteMenu = data.site.siteMetadata?.menu || []\n  const description = data.site.siteMetadata?.description || \"\"\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle} menu={siteMenu}>\n        <Seo title=\"All posts\" />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout\n      location={location}\n      title={siteTitle}\n      menu={siteMenu}\n      description={description}\n    >\n      <Seo title=\"All posts\" />\n      <ArticleList posts={posts} />\n      <div className=\"pagination\">\n        {\" \"}\n        <span></span>\n        <Link to={'/page/2'} rel=\"next\">\n          Next Page â†’\n        </Link>\n      </div>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n        menu {\n          id\n          name\n          url\n        }\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {frontmatter: {status: {eq: \"publish\"}}}\n      limit: 5\n      ) {\n      nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          draft\n          tags\n          categories\n          status\n        }\n      }\n    }\n  }\n`\n"],"names":["ArticleItem","post","title","frontmatter","fields","slug","React","key","className","itemScope","itemType","categories","CategoryLabel","items","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","ArticleList","posts","map","idx","props","category","data","location","siteTitle","site","siteMetadata","allMarkdownRemark","nodes","siteMenu","menu","length","rel"],"sourceRoot":""}