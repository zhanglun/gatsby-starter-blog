{"version":3,"file":"component---src-templates-blog-post-js-8913e7153bf91b18d03b.js","mappings":"6KAOaA,EAAgB,SAACC,GAC5B,IAAQC,EAAUD,EAAVC,MAER,OACEC,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,yBACZF,EAAMG,KAAI,SAACC,EAAUC,GACpB,OACEJ,EAAAA,cAAAA,OAAAA,CAAMC,UAAU,mBAAmBI,IAAKD,GACrCD,S,0FCFb,EAXe,SAAC,GAAsD,IAApDG,EAAmD,EAAnDA,SAAUC,EAAyC,EAAzCA,SAEpBC,GAF6D,EAA/BC,MAA+B,EAAxBC,KAAwB,EAAlBC,YACnC,MACKL,EAASM,UAE5B,OACE,uBAAKX,UAAU,iBAAiB,oBAAmBO,GACjD,2BAASP,UAAU,QAAQM,K,mBCuDjC,EAxDyB,SAAC,GAAwB,IAAD,MAArBM,EAAqB,EAArBA,KAAMP,EAAe,EAAfA,SAC1BQ,EAAOD,EAAKE,eACZC,GAAY,UAAAH,EAAKI,KAAKC,oBAAV,eAAwBT,QAAxB,QACZU,GAAW,UAAAN,EAAKI,KAAKC,oBAAV,eAAwBR,OAAQ,GAC3CC,GAAc,UAAAE,EAAKI,KAAKC,oBAAV,eAAwBP,cAAe,GACnDS,EAAmBP,EAAnBO,SAAUC,EAASR,EAATQ,KAElB,OACE,gBAAC,EAAD,CACEf,SAAUA,EACVG,MAAOO,EACPN,KAAMS,EACNR,YAAaA,GAEb,gBAAC,IAAD,CACEF,MAAOK,EAAKQ,YAAYb,MACxBE,YAAaG,EAAKQ,YAAYX,aAAeG,EAAKS,UAEpD,2BACEtB,UAAU,YACVuB,WAAS,EACTC,SAAS,6BAET,8BACGX,EAAKQ,YAAYI,YAChB,gBAAC7B,EAAA,EAAD,CAAeE,MAAOe,EAAKQ,YAAYI,aAEzC,sBAAIC,SAAS,YAAYb,EAAKQ,YAAYb,OAC1C,yBAAIK,EAAKQ,YAAYM,OAEvB,2BACEC,wBAAyB,CAAEC,OAAQhB,EAAKiB,MACxCJ,SAAS,cACT1B,UAAU,aAGd,uBAAKA,UAAU,cACZmB,EACC,gBAAC,EAAAY,KAAD,CAAMC,GAAIb,EAASc,OAAOC,KAAMlC,UAAU,OAAOmC,IAAI,QAArD,KACKhB,EAASE,YAAYb,OAG1B,gBAAC,EAAAuB,KAAD,CAAM/B,UAAU,OAAOmC,IAAI,SAE5Bf,EACC,gBAAC,EAAAW,KAAD,CAAMC,GAAIZ,EAAKa,OAAOC,KAAMlC,UAAU,OAAOmC,IAAI,QAC9Cf,EAAKC,YAAYb,MADpB,MAIA,gBAAC,EAAAuB,KAAD,CAAM/B,UAAU,OAAOmC,IAAI","sources":["webpack://gatsby-starter-blog/./src/components/CategoryLabel/index.tsx","webpack://gatsby-starter-blog/./src/components/CleanLayout.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["import React from \"react\"\nimport \"./index.css\"\n\ntype CategoryListProps = {\n  items: { name: string }[]\n}\n\nexport const CategoryLabel = (props: CategoryListProps) => {\n  const { items } = props\n\n  return (\n    <div className=\"article-category-list\">\n      {items.map((category, idx) => {\n        return (\n          <span className=\"article-category\" key={idx}>\n            {category}\n          </span>\n        )\n      })}\n    </div>\n  )\n}\n","import * as React from \"react\"\n\nconst Layout = ({ location, children, title, menu, description }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <section className=\"main\">{children}</section>\n    </div>\n  )\n}\n\nexport default Layout\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/CleanLayout\"\nimport Seo from \"../components/seo\"\nimport { CategoryLabel } from \"../components/CategoryLabel\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const siteMenu = data.site.siteMetadata?.menu || []\n  const description = data.site.siteMetadata?.description || \"\"\n  const { previous, next } = data\n\n  return (\n    <Layout\n      location={location}\n      title={siteTitle}\n      menu={siteMenu}\n      description={description}\n    >\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          {post.frontmatter.categories && (\n            <CategoryLabel items={post.frontmatter.categories} />\n          )}\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n          className=\"content\"\n        />\n      </article>\n      <nav className=\"pagination\">\n        {previous ? (\n          <Link to={previous.fields.slug} className=\"prev\" rel=\"prev\">\n            ← {previous.frontmatter.title}\n          </Link>\n        ) : (\n          <Link className=\"prev\" rel=\"prev\"></Link>\n        )}\n        {next ? (\n          <Link to={next.fields.slug} className=\"next\" rel=\"next\">\n            {next.frontmatter.title} →\n          </Link>\n        ) : (\n          <Link className=\"next\" rel=\"next\"></Link>\n        )}\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n        description\n        menu {\n          id\n          name\n          url\n        }\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        categories\n        tags\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        draft\n        tags\n        categories\n        status\n      }\n    }\n  }\n`\n"],"names":["CategoryLabel","props","items","React","className","map","category","idx","key","location","children","isRootPath","title","menu","description","pathname","data","post","markdownRemark","siteTitle","site","siteMetadata","siteMenu","previous","next","frontmatter","excerpt","itemScope","itemType","categories","itemProp","date","dangerouslySetInnerHTML","__html","html","Link","to","fields","slug","rel"],"sourceRoot":""}