{"version":3,"file":"component---src-pages-archives-tsx-2f215b4ec97f44f39dbe.js","mappings":"iLAoFA,UA9EoB,SAAC,GAAwB,IAAD,MAArBA,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACrBC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,EAAYN,EAAKO,kBAAkBC,MAAMC,MAAM,GAAGC,UAClDC,GAAW,UAAAX,EAAKG,KAAKC,oBAAV,eAAwBQ,OAAQ,GAC3CC,GAAc,UAAAb,EAAKG,KAAKC,oBAAV,eAAwBS,cAAe,GAoB3D,OAjBAP,EAAUQ,SAAQ,SAACN,GACjB,IAAQO,EAAUP,EAAVO,MAERP,EAAMO,MAAQA,EAAMC,MAAK,SAACC,EAAGC,GAI3B,OAHcD,EAAEE,YAAYC,MAAQ,KACtBF,EAAEC,YAAYC,MAAQ,KAG1B,EAED,QAOY,IAArBd,EAAUe,OAEVC,EAAAA,cAACC,EAAAA,EAAD,CACEtB,SAAUA,EACVI,MAAOH,EACPU,KAAMD,EACNE,YAAaA,GAEbS,EAAAA,cAACE,EAAAA,EAAD,CAAKnB,MAAM,cACXiB,EAAAA,cAAAA,IAAAA,KAAAA,4JAUJA,EAAAA,cAACC,EAAAA,EAAD,CACEtB,SAAUA,EACVI,MAAOH,EACPU,KAAMD,EACNE,YAAaA,GAEbS,EAAAA,cAACE,EAAAA,EAAD,CAAKnB,MAAM,cACXiB,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,eACdnB,EAAUoB,KAAI,SAACC,EAASC,GACvB,OACEN,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,eAAeI,IAAKD,GACjCN,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,qBACbH,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,gBAAgBE,EAAQG,aAEzCR,EAAAA,cAAAA,KAAAA,CAAIG,UAAU,qBACXE,EAAQZ,MAAMW,KAAI,SAAAK,GACjB,IAAMX,GAAWW,EAAKC,OAAOC,MAAQ,IAAIC,SAAS,EAAG,KAA3C,KACRH,EAAKC,OAAOG,IAAM,IAClBD,SAAS,EAAG,KAEd,OACEZ,EAAAA,cAAAA,KAAAA,CAAIO,IAAKE,EAAKC,OAAOI,MACnBd,EAAAA,cAAAA,OAAAA,CAAMG,UAAU,gBAAgBL,GAChCE,EAAAA,cAACe,EAAAA,KAAD,CAAMC,GAAIP,EAAKC,OAAOI,MAAOL,EAAKZ,YAAYd","sources":["webpack://gatsby-starter-blog/./src/pages/archives.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst ArchivePage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const postGroup = data.allMarkdownRemark.group.slice(0).reverse()\n  const siteMenu = data.site.siteMetadata?.menu || []\n  const description = data.site.siteMetadata?.description || \"\"\n\n  // Gatsby group不支持sort，先在逻辑中排序。有能力之后再提交PR给 Gatsby\n  postGroup.forEach((group) => {\n    const { nodes } = group;\n    \n    group.nodes = nodes.sort((a, b) => {\n      const aDate = a.frontmatter.date || '';\n      const bDate = b.frontmatter.date || '';\n\n      if (aDate > bDate) {\n        return -1;\n      } else {\n        return 1;\n      }\n\n      return 0;\n    });\n  });\n\n  if (postGroup.length === 0) {\n    return (\n      <Layout\n        location={location}\n        title={siteTitle}\n        menu={siteMenu}\n        description={description}\n      >\n        <Seo title=\"All posts\" />\n        <p>\n          No category found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout\n      location={location}\n      title={siteTitle}\n      menu={siteMenu}\n      description={description}\n    >\n      <Seo title=\"All posts\" />\n      <div className=\"page-title\"></div>\n      {postGroup.map((archive, idx) => {\n        return (\n          <div className=\"archive-item\" key={idx}>\n            <div className=\"archive-item-head\">\n              <div className=\"archive-year\">{archive.fieldValue}</div>\n            </div>\n            <ul className=\"archive-item-list\">\n              {archive.nodes.map(node => {\n                const date = `${(node.fields.month + \"\").padStart(2, \"0\")}-${(\n                  node.fields.day + \"\"\n                ).padStart(2, \"0\")}`\n\n                return (\n                  <li key={node.fields.slug}>\n                    <span className=\"archive-date\">{date}</span>\n                    <Link to={node.fields.slug}>{node.frontmatter.title}</Link>\n                  </li>\n                )\n              })}\n            </ul>\n          </div>\n        )\n      })}\n    </Layout>\n  )\n}\n\nexport default ArchivePage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n        menu {\n          id\n          name\n          url\n        }\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { status: { eq: \"publish\" } } }\n    ) {\n      group(field: fields___year) {\n        fieldValue\n        totalCount\n        nodes {\n          frontmatter {\n            date\n            title\n            status\n            categories\n          }\n          fields {\n            slug\n            year\n            month\n            day\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["data","location","siteTitle","site","siteMetadata","title","postGroup","allMarkdownRemark","group","slice","reverse","siteMenu","menu","description","forEach","nodes","sort","a","b","frontmatter","date","length","React","Layout","Seo","className","map","archive","idx","key","fieldValue","node","fields","month","padStart","day","slug","Link","to"],"sourceRoot":""}